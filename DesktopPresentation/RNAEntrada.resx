<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>